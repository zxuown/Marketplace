@using Marketplace.Models;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Create order";
    Layout = "_Layout";
    var item = ViewData["itemSold"] as Item;
    var user = ViewData["currentUser"] as User;
}
@model Order
<div class="container">
    <div class="row mt-5">
        <div class="col-md-4">
            <div class="card">
                @if (user == null)
                {
                    <div id="-1" class="row gap-5 current-user-id"></div>
                }
                else
                {
                    <div id="@user.Id" class="row gap-5 current-user-id"></div>
                }
                <div class="card-header">
                    <h1 class="card-title">Order @item.Title</h1>
                </div>
                <div class="card-body">
                    <form method="post" id="orderForm" enctype="multipart/form-data">
                        @await Html.PartialAsync("_FormControls", Model)
                        <button type="submit" class="btn btn-success" id="saveButton" onclick="buyItem('@item.Title')">Buy</button>
                        <a href="/item/index" class="btn btn-outline-info">Return</a> 
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card" style="width: 18rem;">
                @if (item.Image != null)
                {
                    <div id="carouselExampleControlsNoTouching" class="carousel slide" data-bs-touch="false">
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img src="@item.FullUrl" style="width: 300px; height: 200px;" class="d-block w-100" alt="...">
                            </div>
                            @foreach (var image in item.Images)
                            {
                                <div class="carousel-item">
                                    <img src="@image.Url()" style="width: 300px; height: 200px;" class="d-block w-100" alt="...">
                                </div>

                            }

                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControlsNoTouching" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControlsNoTouching" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                <div class="card-body" id="itemDetails"
                     data-item-id="@item.Id"
                     data-item-price="@item.Price"
                     data-item-user-id="@item.User.Id">
                    <h5 class="card-title">@item.Title</h5>
                    <p class="card-text">@item.Description</p>
                    <p class="card-text">Category: @item.Category.Title</p>
                    <p class="card-text price">Price: @item.Price</p>
                    <p class="card-text userId">Created by: @item.User.UserName</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>    



    let currUserId = $(".current-user-id").attr("id")
    //let userSold = localStorage.getItem('userSold')
   // let messageShown = localStorage.getItem('messageShown')
    //console.log(messageShown, currUserId, userSold)
    function buyItem(itemTitle) {
        event.preventDefault();
        if ($(".OrderName input").val().trim() !== "" &&
            $(".OrderCity input").val().trim() !== "" &&
            $(".OrderSecondName input").val().trim() !== "" &&
            $(".OrderPhone input").val().trim() !== "" &&
            $(".OrderEmail input").val().trim() !== "") {    
            const itemId = document.getElementById('itemDetails').dataset.itemId
            const itemPrice = document.getElementById('itemDetails').dataset.itemPrice
            const itemUserId = document.getElementById('itemDetails').dataset.itemUserId
           // localStorage.setItem('userSold', itemUserId)

            console.log('Item ID:', itemId);
            console.log('Item Price:', itemPrice);
            console.log('Item User ID:', itemUserId);

        

           // console.log(userId, price, itemSoldId)
            Swal.fire({
                title: 'Confirm purchase',
                text: `Are you sure you want to buy ${itemTitle}?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, buy it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/item/SetNewPriceUser`, {
                        method: "Post",
                        headers: {
                            'Content-Type': "application/json"
                        },
                        body: JSON.stringify(
                            {
                                SellerId: parseInt(itemUserId),
                                ItemSoldId: parseInt(itemId),
                                Price: parseFloat(itemPrice)
                            })
                    }).then(response => {
                        if (response.ok) {
                            //localStorage.setItem('messageShown', 'false');
                            fetch(`/order/create/${itemId}`, {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    Name: $(".OrderName input").val().trim(),
                                    SecondName: $(".OrderName input").val().trim(),
                                    City: $(".OrderCity input").val().trim(),
                                    Phone: $(".OrderPhone input").val().trim(),
                                    Email: $(".OrderEmail input").val().trim(),
                                    WareHouse: $('#WarehouseId').val().trim(),
                                })
                            }).then(response => {
                                if (response.ok) {
                                    Swal.fire('Success!', 'Your purchase has been completed.', 'success')
                                        .then(() => {
                                            window.location.href = '/home/index';
                                        });
                                }
                            })
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Not enough money!",
                                footer: '<a href="/payorder/index">Refill the balance?</a>'
                            });
                        }
                    }).catch(error => {
                        console.error('Error:', error);
                    });
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Fill all fields!",
            });
        }
       
    }
</script>
